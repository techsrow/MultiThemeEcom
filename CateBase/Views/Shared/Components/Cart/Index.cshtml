@model List<Cart>
@{
    ViewData["Title"] = "Cart";
}



@if (Model.Count > 0)
{
    <div class="panel-control-right">
        <div id="slide-out-right" class="side-nav">
            @{
                double subTotal = 0;
            }
            @foreach (var item in Model)
            {

                <div class="row entry">

                    <div class="col s4">
                        @if (item.Product.Image != null)
                        {
                            <a asp-controller="Products" asp-action="Details" asp-route-id="@item.Product.Id"><img src="@item.Product.Image" alt="@item.Product.Name" /></a>

                        }
                    </div>
                    <div class="col s6">
                        <div class="desc">
                            <h6>@item.Product.Name</h6>
                            <div class="rating">
                                <span class="active"><i class="fa fa-star"></i></span>
                                <span class="active"><i class="fa fa-star"></i></span>
                                <span class="active"><i class="fa fa-star"></i></span>
                                <span class="active"><i class="fa fa-star"></i></span>
                                <span class=""><i class="fa fa-star"></i></span>
                            </div>

                            <h6><span>Rs.@(item.Product.FinalPrice * item.Qty)</span></h6>

                        </div>
                    </div>
                    <div class="col s2">
                        <div class="action">
                            <a asp-controller="Cart" asp-action="Remove" asp-route-id="@item.Id">
                                <i class="fa fa-remove"></i>
                            </a>

                        </div>
                    </div>
                </div>
                if (item.Product.FinalPrice != null)
                {
                    subTotal += (double)item.Product.FinalPrice * item.Qty;
                }
                else
                {
                    subTotal += (double)item.Product.FinalPrice * item.Qty;
                }

            }

            <div class="row price">
                <div class="col s8">
                    <h6>Total</h6>
                </div>
                <div class="col s4">
                    <h6>Rs.@subTotal</h6>
                </div>
            </div>
            <ul>

                <li>
                    <a asp-controller="Cart" class="btn-small cyan lighten-4" asp-action="Index">View Cart</a>
                </li>
                <li>
                    <a asp-controller="Checkout" class="btn-small light-green lighten-4" asp-action="Index">Checkout</a>
                </li>
            </ul>
        </div>
    </div>
    <!-- end panel control right -->
}

<!-- end product cart -->



@section Scripts
{
    <script src="~/lib/jquery/jquery.js"></script>
    <script>
        $("#update").click(function () {
            var data = [];
            $("input[cartId]").each(function () {
                data.push({ "cartId": $(this).attr("cartId"), "QTY": $(this).val() });
            });
            console.log(data);
            $.post({
                //                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Cart/UpdateCart",
                data: { "items": data },
                async: true,
                //                data: data,
                success: function (response) {
                    console.log(response);
                    location.reload();
                },
                failure: function (response) {
                    console.log(response);
                    alert("Something went wrong.");
                }
            });
        });

        $('.btn-number').click(function (e) {
            e.preventDefault();
            $("#update").show();
            fieldName = $(this).attr('data-field');
            type = $(this).attr('data-type');
            var input = $("input[name='" + fieldName + "']");
            var currentVal = parseInt(input.val());
            if (!isNaN(currentVal)) {
                if (type === 'minus') {

                    if (currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('min')) {
                        $(this).attr('disabled', true);
                    }

                } else if (type == 'plus') {

                    if (currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }
        });
        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('name');
            if (valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }


        });
        $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    </script>
}
