@model BasePackageModule2.ViewModels.NavViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Http
@using Microsoft.EntityFrameworkCore

@{ var user = await UserManager.Users.Include(a => a.Cart).FirstOrDefaultAsync(a => a.Id == UserManager.GetUserId(User)); }

@if (Model.ThemeSetting != null)
{

    @foreach (var theme in Model.ThemeSetting)
    {
        @if (theme.ThemeName == "Furniture1" && theme.ThemeCategory == "Furniture1" && theme.IsActive == true && theme.SkinType == "Furniture1")
        {
            <header class="header header-2 header-intro-clearance">
                <div class="header-top">
                    <div class="container">
                        <div class="header-left">
                            <p>collection .</p><a asp-controller="Products" asp-action="Index">&nbsp;Explore Now</a>
                        </div><!-- End .header-left -->

                        <div class="header-right">

                            <ul class="top-menu">
                                <li>
                                    <a href="#"></a>
                                    <ul>
                                        <li>
                                            <div class="header-dropdown">


                                            </div>
                                        </li>
                                        <li>
                                            <div class="header-dropdown">


                                            </div>
                                        </li>

                                        @if (SignInManager.IsSignedIn(User)  &&  User.IsInRole("Admin"))
                                {

                                        <li style="padding:5px;">
                                            <a asp-area="Admin" asp-controller="Admin" target="_blank" asp-action="Index" title="My Dashborad">
                                              
                                                    
                                                        <!--begin::Svg Icon | path: icons/duotune/general/gen025.svg-->
                                                       
                                                        <!--end::Svg Icon-->
                                             
                                              
                                                <p>
                                                    <span class="svg-icon svg-icon-2">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                            <rect x="2" y="2" width="9" height="9" rx="2" fill="currentColor"></rect>
                                                            <rect opacity="0.3" x="13" y="2" width="9" height="9" rx="2" fill="currentColor"></rect>
                                                            <rect opacity="0.3" x="13" y="13" width="9" height="9" rx="2" fill="currentColor"></rect>
                                                            <rect opacity="0.3" x="2" y="13" width="9" height="9" rx="2" fill="currentColor"></rect>
                                                        </svg>
                                                    </span>Admin Dashboard
                                                </p>
                                            </a>
                                        </li>
                                }
                                 else{
                                        <li><a asp-area="Identity" asp-page="/Account/Login">Sign in</a></li>
                                        <li><a asp-area="Identity" asp-page="/Account/Register"> Sign up</a></li>
                                        }



                                    </ul>
                                </li>
                            </ul><!-- End .top-menu -->
                        </div><!-- End .header-right -->

                    </div><!-- End .container -->
                </div><!-- End .header-top -->

                <div class="header-middle">
                    <div class="container">
                        <div class="header-left">
                            <button class="mobile-menu-toggler">
                                <span class="sr-only">Toggle mobile menu</span>
                                <i class="icon-bars"></i>
                            </button>

                            <a asp-area="" asp-controller="Home" asp-action="Index" class="logo">

                                @if (Model.Logo != null)
                                {
                                    <img src="@Model.Logo.HeaderLogo" alt="@Model.BusinessProfile.BusinessName" width="105" height="25">
                                }
                                else
                                {
                                    <img src="https://4m4you.com/wp-content/uploads/2020/06/logo-placeholder.png" width="105" height="25" />
                                }

                            </a>
                        </div><!-- End .header-left -->

                        <div class="header-center">
                            <div class="header-search header-search-extended header-search-visible header-search-no-radius d-none d-lg-block">
                                <a href="#" class="search-toggle" role="button"><i class="icon-search"></i></a>
                                <form method="get" role="search" asp-area="" asp-controller="Search" asp-action="Index">
                                    <div class="header-search-wrapper search-wrapper-wide">
                                        <label for="q" class="sr-only">Search</label>
                                        <input type="text" class="form-control" name="query" @ViewBag.categoryName  placeholder="Search product ..." required>
                                        <button class="btn btn-primary" type="submit"><i class="icon-search"></i></button>
                                    </div><!-- End .header-search-wrapper -->
                                </form>
                            </div><!-- End .header-search -->
                        </div>

                        <div class="header-right">
                            <div class="account" style="width:125px;">
                                @if (SignInManager.IsSignedIn(User))
                                {

                                    <a asp-area="Identity" asp-page="/Account/Manage/Index" title="My account">
                                        <div class="icon">
                                            <i class="icon-user"></i>
                                        </div>
                                        <p>@user.FirstName</p>
                                    </a>
                                }
                                else
                                {
                                    <a href="/Identity/Account/Login" title="My account">
                                        <div class="icon">
                                            <i class="ui-icon-locked"></i>
                                        </div>
                                        <p>Log In</p>
                                    </a>
                                }
                            </div><!-- End .compare-dropdown -->
                            <!-- End .compare-dropdown -->
                            @if (SignInManager.IsSignedIn(User))
                            {


                                @await Component.InvokeAsync("Cart")
                            }
                            else
                            {
                                <div class="dropdown cart-dropdown">
                                    <a href="#" class="dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-display="static">
                                        <div class="icon">
                                            <i class="icon-shopping-cart"></i>
                                            <span class="cart-count">

                                                0

                                            </span>
                                        </div>
                                        <p>Cart</p>
                                    </a>


                                </div>
                            }



                        </div><!-- End .header-right -->

                        <!-- End .header-dropdown -->
                    </div><!-- End .container -->
                </div><!-- End .header-middle -->

                <div class="header-bottom sticky-header">
                    <div class="container">
                        @if (Model.Menus != null)
                        {

                        <div class="header-left">

                            @foreach (var menu in Model.Menus)
                            {
                                if (menu.Type == "categoryCollection")
                                {

                                    <div class="dropdown category-dropdown">
                                        <a href="#" class="dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-display="static" title="Browse Categories">
                                            @menu.Name
                                        </a>

                                        <div class="dropdown-menu">
                                            <nav class="side-nav">
                                                <ul class="menu-vertical sf-arrows">
                                                    @foreach (var menuCategory in menu.MenuCategories)
                                                    {


                                                        <li class="item-lead"><a asp-area="" asp-controller="Products" asp-action="Index" asp-route-category="@menuCategory.Category.Name">@menuCategory.Category.Name</a></li>
                                                       
                                                    }

                                                </ul><!-- End .menu-vertical -->
                                            </nav><!-- End .side-nav -->
                                        </div><!-- End .dropdown-menu -->
                                    </div>

                                }
                            }

                            <!-- End .category-dropdown -->


                        </div>
                            <div class="header-center">
                                <nav class="main-nav">
                                    <ul class="menu">
                                        @foreach (var menu in Model.Menus)
                                        {
                                        <li class="megamenu-container">
                                            @if (menu.Type == "interLink" || menu.Type == null)
                                {
                                            <a href="@menu.Url" class="sf-with-ul">@menu.Name</a>
                                }
                                                


                                        </li>
                                           
                                        }
                                        </ul><!-- End .menu -->
                                </nav><!-- End .main-nav -->
                            </div>

                        }
                        <!-- End .header-center -->

                        <div class="header-right">
                            <i class="la la-lightbulb-o"></i><p>Clearance<span class="highlight">
    &nbsp;@if (Model.Coupon != null)
    {@Model.Coupon.Name }
                       

</span></p>
                        </div>
                    </div><!-- End .container -->
                </div><!-- End .header-bottom -->
            </header><!-- End .header -->

       
        }

       


    }



     
}



@section Scripts
{
    <script src="~/lib/jquery/jquery.js"></script>
    <script>
        $("#update").click(function () {
            var data = [];
            $("input[cartId]").each(function () {
                data.push({ "cartId": $(this).attr("cartId"), "QTY": $(this).val() });
            });
            console.log(data);
            $.post({
                //                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Cart/UpdateCart",
                data: { "items": data },
                async: true,
                //                data: data,
                success: function (response) {
                    console.log(response);
                    location.reload();
                },
                failure: function (response) {
                    console.log(response);
                    alert("Something went wrong.");
                }
            });
        });

        $('.btn-number').click(function (e) {
            e.preventDefault();
            $("#update").show();
            fieldName = $(this).attr('data-field');
            type = $(this).attr('data-type');
            var input = $("input[name='" + fieldName + "']");
            var currentVal = parseInt(input.val());
            if (!isNaN(currentVal)) {
                if (type === 'minus') {

                    if (currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('min')) {
                        $(this).attr('disabled', true);
                    }

                } else if (type == 'plus') {

                    if (currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }
        });


        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('name');
            if (valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }


        });
        $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    </script>

    <script>
        $("#updatemobile").click(function () {
            var data = [];
            $("input[cartId]").each(function () {
                data.push({ "cartId": $(this).attr("cartId"), "QTY": $(this).val() });
            });
            console.log(data);
            $.post({
                //                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Cart/UpdateCart",
                data: { "items": data },
                async: true,
                //                data: data,
                success: function (response) {
                    console.log(response);
                    location.reload();
                },
                failure: function (response) {
                    console.log(response);
                    alert("Something went wrong.");
                }
            });
        });

        $('.btn-number-mobile').click(function (e) {
            e.preventDefault();
            $("#updatemobile").show();
            fieldName = $(this).attr('data-field');
            type = $(this).attr('data-type');
            var input = $("input[name='" + fieldName + "']");
            var currentVal = parseInt(input.val());
            if (!isNaN(currentVal)) {
                if (type === 'minus') {

                    if (currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('min')) {
                        $(this).attr('disabled', true);
                    }

                } else if (type == 'plus') {

                    if (currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }
        });


        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('name');
            if (valueCurrent >= minValue) {
                $(".btn-number-mobile[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number-mobile[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }


        });
        $(".input-number-mobile").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    </script>
}
